\name{calculate_deviations}
\alias{calculate_deviations}
\title{Calculate Perpendicular Signed Deviations from a Line}
\description{
Calculates the signed perpendicular deviations of each data point in a GPX data frame relative to a specified or inferred straight line.
This function is intended for use in analyzing deviations from a target path.
}
\usage{
calculate_deviations(gpx_data, line_data = NULL)
}
\arguments{
  \item{gpx_data}{
    A data frame of the same format as generated by the \code{\link{read_route_gpx}} function.
    Must contain columns \code{Lat} (latitude) and \code{Long} (longitude), among others.
  }
  \item{line_data}{
    (Optional) A data frame of the same format as generated by the \code{\link{read_line_gpx}} function.
    If not provided (\code{NULL}), the line will be inferred as the straight line connecting the first and last rows of \code{gpx_data}.
  }
}
\value{
A data frame with the same columns as the input \code{gpx_data}, with two additional columns:
\itemize{
  \item{\code{Signed_Distance}}{: The perpendicular signed distance of each track point from the straight line. Positive values indicate deviation on one side of the line, negative values on the other.}
  \item{\code{Intersection_Distance}}{: The parallel distance of each track point along the straight line, measured from the starting point of the line.}
}
The resulting data frame retains all original columns of \code{gpx_data}.
}
\examples{
# Example 1: Using explicit line_data
gpx_data <- read_route_gpx("example_route.gpx")
line_data <- read_line_gpx("example_line.gpx")
deviation_data <- calculate_deviations(gpx_data, line_data)

# Example 2: Inferring the line from gpx_data
gpx_data <- read_route_gpx("example_route.gpx")
deviation_data <- calculate_deviations(gpx_data)
}
